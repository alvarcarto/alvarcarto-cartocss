scale: 1
metatile: 2
name: OpenStreetMap Carto
description: A general-purpose OpenStreetMap mapnik style, in CartoCSS
bounds: &world
  - -180
  - -85.05112877980659
  - 180
  - 85.05112877980659
center:
  - 0
  - 0
  - 4
format: png
interactivity: false
minzoom: 0
maxzoom: 22
srs: "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over"

# Various parts to be included later on
_parts:
  # Extents are used for tilemill, and don't actually make it to the generated XML
  extents: &extents
    extent: *world
    srs-name: "900913"
    srs: "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over"
  extents84: &extents84
    extent: *world
    srs-name: "WGS84"
    srs: "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
  osm2pgsql: &osm2pgsql
    type: "postgis"
    dbname: "osm"
    host: "localhost"
    user: "osm"
    port: 5432
    password: "osm"
    key_field: ""
    geometry_field: "way"
    extent: "-20037508,-20037508,20037508,20037508"

Stylesheet:
  - roads.mss

Layer:

  #
  # Shape file styles
  # #################

  - id: world
    name: world
    geometry: polygon
    srs: "+init=epsg:3857"
    <<: *extents
    Datasource:
      file: data/simplified-land-polygons-complete-3857/simplified_land_polygons.shp
      type: shape
    properties:
      maxzoom: 9

  - id: coast-poly
    name: coast-poly
    geometry: polygon
    srs: "+init=epsg:3857"
    <<: *extents
    Datasource:
      file: data/land-polygons-split-3857/land_polygons.shp
      type: shape
    properties:
      minzoom: 10

  - id: builtup
    name: builtup
    geometry: polygon
    extent: *world
    srs-name: mercator
    srs: "+proj=merc +datum=WGS84 +over"
    Datasource:
      file: data/world_boundaries/builtup_area.shp
      type: shape
    properties:
      minzoom: 8
      maxzoom: 9

  - id: necountries
    name: necountries
    geometry: linestring
    <<: *extents84
    Datasource:
      file: data/ne_110m_admin_0_boundary_lines_land/ne_110m_admin_0_boundary_lines_land.shp
      type: shape
    properties:
      minzoom: 1
      maxzoom: 3

  - id: icesheet-poly
    name: icesheet-poly
    geometry: polygon
    <<: *extents
    Datasource:
      file: data/antarctica-icesheet-polygons-3857/icesheet_polygons.shp
      type: shape
    properties:
      minzoom: 4

  - id: icesheet-outlines
    name: icesheet-outlines
    geometry: linestring
    <<: *extents
    Datasource:
      file: data/antarctica-icesheet-outlines-3857/icesheet_outlines.shp
      type: shape
    properties:
      minzoom: 4

  #
  # Land cover
  # ##########

  - id: roads-fill
    name: roads-fill
    class: roads-fill access
    geometry: linestring
    <<: *extents
    Datasource:
      <<: *osm2pgsql
      # This is one of the most complex layers, so it bears explaining in some detail
      # It is necessary to
      # - Have roads and railways in the same layer to get ordering right
      # - Return two linestrings for ways which are both a road and railway
      # - Compute z_order here, rather than rely on osm2pgsql z_order
      table: |-
        (SELECT
            way,
            (CASE WHEN substr(feature, length(feature)-3, 4) = 'link' THEN substr(feature, 0, length(feature)-4) ELSE feature END) AS feature
          FROM ( -- begin "features" subselect that contains both roads and rail/aero
            SELECT
                way,
                ('highway_' || highway) AS feature -- only motorway to tertiary links are accepted later on
              FROM planet_osm_line
              WHERE (tunnel IS NULL OR NOT tunnel IN ('yes', 'building_passage'))
                AND (covered IS NULL OR NOT covered = 'yes')
                AND (bridge IS NULL OR NOT bridge IN ('yes', 'boardwalk', 'cantilever', 'covered', 'low_water_crossing', 'movable', 'trestle', 'viaduct'))
                AND highway IS NOT NULL -- end of road select
            UNION ALL
            SELECT
                way,
                COALESCE(
                  ('railway_' || (CASE WHEN railway = 'preserved' AND service IN ('spur', 'siding', 'yard') THEN 'INT-preserved-ssy'::text
                                       WHEN (railway = 'rail' AND service IN ('spur', 'siding', 'yard')) THEN 'INT-spur-siding-yard'
                                       WHEN (railway = 'tram' AND service IN ('spur', 'siding', 'yard')) THEN 'tram-service' ELSE railway END)),
                  ('aeroway_' || aeroway)
                ) AS feature
              FROM planet_osm_line
              WHERE (tunnel IS NULL OR NOT tunnel IN ('yes', 'building_passage'))
                AND (covered IS NULL OR NOT covered = 'yes')
                AND (bridge IS NULL OR NOT bridge IN ('yes', 'boardwalk', 'cantilever', 'covered', 'low_water_crossing', 'movable', 'trestle', 'viaduct'))
                AND (railway IS NOT NULL OR aeroway IS NOT NULL) -- end of rail/aero select
            ) AS features
          JOIN (VALUES -- this join is also putting a condition on what is selected. features not matching it do not make it into the results.
              ('railway_rail', 440),
              ('railway_INT-preserved-ssy', 430),
              ('railway_INT-spur-siding-yard', 430),
              ('railway_subway', 420),
              ('railway_narrow_gauge', 420),
              ('railway_light_rail', 420),
              ('railway_preserved', 420),
              ('railway_funicular', 420),
              ('railway_monorail', 420),
              ('railway_miniature', 420),
              ('railway_turntable', 420),
              ('railway_tram', 410),
              ('railway_tram-service', 405),
              ('railway_disused', 400),
              ('railway_construction', 400),
              ('highway_motorway', 380),
              ('highway_trunk', 370),
              ('highway_primary', 360),
              ('highway_secondary', 350),
              ('highway_tertiary', 340),
              ('highway_residential', 330),
              ('highway_unclassified', 330),
              ('highway_road', 330),
              ('highway_living_street', 320),
              ('highway_pedestrian', 310),
              ('highway_raceway', 300),
              ('highway_motorway_link', 240),
              ('highway_trunk_link', 230),
              ('highway_primary_link', 220),
              ('highway_secondary_link', 210),
              ('highway_tertiary_link', 200),
              ('highway_service', 150),
              ('highway_track', 110),
              ('highway_path', 100),
              ('highway_footway', 100),
              ('highway_bridleway', 100),
              ('highway_cycleway', 100),
              ('highway_steps', 100),
              ('highway_platform', 90),
              ('railway_platform', 90),
              ('aeroway_runway', 60),
              ('aeroway_taxiway', 50),
              ('highway_construction', 10)
            ) AS ordertable (feature, prio)
            USING (feature)
          ORDER BY
            prio
        ) AS roads_fill
    properties:
      minzoom: 8
